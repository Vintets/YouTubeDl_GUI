
            *** yt-dlp ***

youtube-dl давно не обновлялся, используем его форк yt-dlp  v.2024.4.9 (2025.3.31)


# папка приложения
#WIN#
cd /d %YandexDisk%\_Projects_Py\YouTubeDl_GUI

# запуск
python3 %YandexDisk%\_Projects_Py\YouTubeDl_GUI\YouTubeDl_GUI.py
# запуск через виртуальное окружение
venv\Scripts\pythonw.exe YouTubeDl_GUI.py


#WIN#
# активация виртуального окружения
%YandexDisk%\_Projects_Py\YouTubeDl_GUI\venv\Scripts\activate.bat

# деактивация окружения
%YandexDisk%\_Projects_Py\YouTubeDl_GUI\venv\Scripts\deactivate.bat



Запуск с ярлыка
D:\YandexDisk\_Projects_Py\YouTubeDl_GUI\launcher_YTDL.cmd

в launcher_YTDL.cmd:
@echo off
@color 71
REM cd %~dp0
start /B /D "%~dp0venv\Scripts" "python.exe" "%~dp0YouTubeDl_GUI.py"


Запуск с ярлыка строго в папке проекта
%windir%\system32\cmd.exe /C @color 71 && start /B /D ".\venv\Scripts" "python.exe" ".\YouTubeDl_GUI.py"



# ======================================================================================================================
            *** Git ***

Проект YouTubeDl_GUI
    cd "$YandexDisk/_Projects_Py/YouTubeDl_GUI"
    git remote add origin git@bitbucket.org:Vintets/youtubedl_gui.git
    # добавить привязку ко 2 репозиторию (github)
    git remote set-url origin --add git@github.com:Vintets/YouTubeDl_GUI.git


    git push origin master


# ======================================================================================================================
            *** flake8 ***

cd /d %YandexDisk%\_Projects_Py\YouTubeDl_GUI

flake8
flake8 YouTubeDl_GUI.py
flake8 D:\YandexDisk\_Projects_Py\YouTubeDl_GUI\YouTubeDl_GUI.py

# noqa


#=======================================================================================================================
            *** pip-tools pip-compile + pip-sync ***

# папка приложения
cd /d %YandexDisk%\_Projects_Py\YouTubeDl_GUI

# активация окружения
%YandexDisk%\_Projects_Py\YouTubeDl_GUI\venv\Scripts\activate.bat

pip install pip-tools

# YouTubeDl_GUI ----------------------------------------------------------------

# Компиляция
pip-compile requirements_venv_YTDL312.in -o requirements_venv_YTDL312.txt
pip-compile requirements_venv_YTDL312-dev.in -o requirements_venv_YTDL312-dev.txt

# Установка
pip-sync requirements_venv_YTDL312.txt requirements_venv_YTDL312-dev.txt

# Upgrade
pip-compile requirements_venv_YTDL312.in -o requirements_venv_YTDL312.txt --upgrade
pip-compile requirements_venv_YTDL312-dev.in -o requirements_venv_YTDL312-dev.txt --upgrade


# ======================================================================================================================
            *** Пример видео ***

# Входит и замечательно выходит 19s
https://youtu.be/b_tdqGM4_sE

# Stronghold
https://youtu.be/XifjHd4ySWA


#‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡‡

# вывести инфу о видео
yt-dlp --get-title -F https://youtu.be/b_tdqGM4_sE
yt-dlp --cookies cookies.txt --get-title -F https://youtu.be/b_tdqGM4_sE


#▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
# запуск приложения с конфигом

cd "$YandexDisk/_Projects_Py/YouTubeDl_GUI/yt-dlp"

# конфиг 1080
# формат <=1080p адаптивный (DASH)/прогрессивный (совмещённый)
yt-dlp --config-location yt-dl-1080.conf https://youtu.be/b_tdqGM4_sE

# конфиг 1080-mp4
# формат <=1080p mp4 адаптивный (DASH)/прогрессивный (совмещённый)/если mp4 недоступен - любой лучший
yt-dlp --config-location yt-dl-1080-mp4.conf https://youtu.be/b_tdqGM4_sE

# конфиг best-progressive
# формат лучший прогрессивный (совмещённый) (такие форматы через плагин браузера)
yt-dlp --config-location yt-dl-best-progressive.conf https://youtu.be/b_tdqGM4_sE

# конфиг best
# формат лучший любой (по умолчанию)
yt-dlp --config-location yt-dl-best.conf https://youtu.be/b_tdqGM4_sE

# конфиг yt-dl-mp3-192
# конвертация в mp3 192
yt-dlp --config-location yt-dl-mp3-192.conf https://youtu.be/b_tdqGM4_sE
#▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲


# скачать в  наилучшем качестве (по умолчанию) -f bestvideo+bestaudio/best
yt-dlp --write-thumbnail https://youtu.be/b_tdqGM4_sE

# формат лучший доступный mp4 или любой другой лучший, если mp4 недоступен
yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best' --write-thumbnail https://youtu.be/b_tdqGM4_sE


# вывести список миниатюр
yt-dlp --list-thumbnails https://youtu.be/XifjHd4ySWA
https://i.ytimg.com/vi/XifjHd4ySWA/maxresdefault.jpg

# сохранять миниатюру/все миниатюры
yt-dlp --write-thumbnail https://youtu.be/XifjHd4ySWA
yt-dlp --write-all-thumbnails https://youtu.be/XifjHd4ySWA

# description
yt-dlp [OPTIONS] [--] URL [URL...]


#----------------------------------------------
# Конфиги с указанием параметров
# запуск приложения с конфигом 1080
# формат <=1080p адаптивный (DASH)/прогрессивный (совмещённый)
yt-dlp --config-location yt-dl-1080.conf https://youtu.be/b_tdqGM4_sE
# -f 'bestvideo[height<=?1080]+bestaudio/best'

# запуск приложения с конфигом 1080-mp4
# формат <=1080p mp4 адаптивный (DASH)/прогрессивный (совмещённый)/или любой другой лучший, если mp4 недоступен
yt-dlp --config-location yt-dl-1080-mp4.conf https://youtu.be/b_tdqGM4_sE
# -f 'bestvideo[ext=mp4][height<=?1080]+bestaudio[ext=m4a]/best[ext=mp4]/best'

# запуск приложения с конфигом best-progressive
# формат лучший прогрессивный (совмещённый)
yt-dlp --config-location yt-dl-best-progressive.conf https://youtu.be/b_tdqGM4_sE
# -f best

# запуск приложения с конфигом best
# формат лучший любой (по умолчанию)
yt-dlp --config-location yt-dl-best.conf https://youtu.be/b_tdqGM4_sE
# -f bestvideo+bestaudio/best

# запуск приложения с конфигом yt-dl-mp3-192
# конвертация в mp3 192
yt-dlp --config-location yt-dl-mp3-192.conf https://youtu.be/b_tdqGM4_sE
-f bestaudio/best
-x
--audio-format mp3
--audio-quality 192
#----------------------------------------------


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Входит и замечательно выходит 19s
https://youtu.be/b_tdqGM4_sE
Просмотр в браузере         398+251
Наилучший (без параметров)  247+140.mkv
[youtube] b_tdqGM4_sE: Writing thumbnail to: Входит и замечательно выходит!-b_tdqGM4_sE.jpg
WARNING: Requested formats are incompatible for merge and will be merged into mkv.
[download] Destination: Входит и замечательно выходит!-b_tdqGM4_sE.f247.webm
[download] 100% of 1.93MiB in 00:25
[download] Destination: Входит и замечательно выходит!-b_tdqGM4_sE.f140.m4a
[download] 100% of 302.71KiB in 00:03
[ffmpeg] Merging formats into "Входит и замечательно выходит!-b_tdqGM4_sE.mkv"


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            *** Выбор формата ***


yt-dlp https://youtu.be/b_tdqGM4_sE
или
yt-dlp -f bestvideo+bestaudio/best https://youtu.be/b_tdqGM4_sE

yt-dlp -f mp4/bestvideo+m4a/bestaudio https://youtu.be/b_tdqGM4_sE

# видео 299 или 303, аудио 140 или 251
yt-dlp --write-thumbnail -f 299/303,140/251
yt-dlp --write-thumbnail -f best
yt-dlp --write-thumbnail -f bestvideo
yt-dlp --write-thumbnail -f bestaudio

yt-dlp -f 136/137/mp4/bestvideo,140/m4a/bestaudio


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            *** Выбор кодека ***

-S vcodec:h264
-S vcodec:h264,acodec:mp4a


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            *** Playlists ***


yt-dlp --flat-playlist PLDyvV36pndZFHXjXuwA_NywNrVQO0aQqb

yt-dlp --config-location "D:\YandexDisk\_Projects_Py\YouTubeDl_GUI\yt-dlp\yt-dl-1080.conf" PLDyvV36pndZFHXjXuwA_NywNrVQO0aQqb

https://www.youtube.com/watch?v=W4hoc24K93E&list=PLDyvV36pndZFHXjXuwA_NywNrVQO0aQqb&index=1&pp=iAQB
https://www.youtube.com/playlist?list=PLDyvV36pndZFHXjXuwA_NywNrVQO0aQqb


https://www.youtube.com/playlist?list=PLqGS6O1-DZLpVl2ks4S_095efPUgunsJo
yt-dlp --flat-playlist PLqGS6O1-DZLpVl2ks4S_095efPUgunsJo
yt-dlp --config-location yt-dl-1080-mp4.conf PLqGS6O1-DZLpVl2ks4S_095efPUgunsJo



#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            *** OPTIONS ***


# coding: utf-8

-N, --concurrent-fragments N    Number of fragments of a dash/hlsnative
                                video that should be downloaded concurrently
                                (default is 1)
-r, --limit-rate RATE           Maximum download rate in bytes per second,
                                e.g. 50K or 4.2M

--merge-output-format FORMAT    Containers that may be used when merging
                                formats, separated by "/", e.g. "mp4/mkv".
                                Ignored if no merge is required. (currently
                                supported: avi, flv, mkv, mov, mp4, webm)
                                Контейнеры, которые можно использовать при слиянии
--merge-output-format "mp4/mkv"

--no-playlist                   Download only the video, if the URL refers
                                to a video and a playlist
-I, --playlist-items ITEM_SPEC  Comma separated playlist_index of the items
                                to download. You can specify a range using
                                "[START]:[STOP][:STEP]". For backward
                                compatibility, START-STOP is also supported.
                                Use negative indices to count from the right
                                and negative STEP to download in reverse
                                order. E.g. "-I 1:3,7,-5::2" used on a
                                playlist of size 15 will download the items
                                at index 1,2,3,7,11,13,15

--download-sections "*6:02-6:22" Скачать фрагмент с точным временем (оооочень медленно + кипит проц)
                                 ("inf" - значит до конца видео)
--download-sections "*6:02:95-inf" --force-keyframes-at-cuts

--socket-timeout SECONDS

--retries RETRIES               Количество повторов (по умолчанию 0 для API, и 10 для CLI)

--retry-sleep                   retry_sleep_functions = {'http'}
                                Время сна между повторными попытками в секундах
                                (необязательно) с префиксом типа повтора
                                (http (по умолчанию), фрагмент, доступ к файлу, экстрактор)
                                (http (default), fragment, file_access, extractor)
                                для применения сна.
                                EXPR может быть числом,
                                linear=START[:END[:STEP=1]] or
                                exp=START[:END[:BASE=2]]
                                например, --retry-sleep linear=1::2 --retry-sleep fragment:exp=1:20


вы можете использовать загрузчик aria2.
он может загружать файлы с несколькими подключениями, например, с 16 подключений
--external-downloader aria2c --external-downloader-args "-x 16 -s 16 -k 1M"


# печатать название
--get-title


аргументы в python скрипте (опции)
    'writethumbnail': self.writethumbnail,
    'nocheckcertificate': self.nocheckcertificate,
    # 'forcetitle': True,
    # [vcodec~="^((he|a)vc|h26[45])"]   # с кодеком h264 или h265
    # [protocol^=http]                  # по прямой ссылке по протоколу HTTP/HTTPS
    'format': '(bestvideo[ext=mp4][height<=?1080]+bestaudio[ext=m4a])[protocol^=http]/best[ext=mp4][protocol^=http]/best',
    'outtmpl': f'{config.PATH_SAVE}{self.filename_sample}',
    # 'logger': MyLogger(),
    # 'ratelimit': 307200,  # bytes/s
    # 'socket_timeout': 3.5,
    # 'retries': 15,


# ======================================================================================================================
            *** передать файлы cookie в yt-dlp ***


# передать файл cookie
--cookies cookies.txt
--cookies /path/to/cookies/cookies.txt

первая строка файла cookie должна быть либо # HTTP Cookie File, либо # Netscape HTTP Cookie File
правильный формат новой строки в файле cookie, в соответствии с ОС, а именно CRLF (\r\n) для Windows
В Firefox можно создать расширением cookies.txt


# ======================================================================================================================
            *** install, download ***


да и сам youtube-dl давно не обновлялся, попробуйте его форк yt-dlp
https://github.com/yt-dlp/yt-dlp

Через pip
pip3 install yt-dlp -U
sudo pip3 install --upgrade youtube_dl


Windows.exe
https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe


Проверить и установить обновления
yt-dlp -U


Full source
https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz

Хотя все остальные зависимости являются необязательными, настоятельно рекомендуется использовать ffmpeg и ffprobe.


# github
git@github.com:yt-dlp/yt-dlp.git
https://github.com/yt-dlp/yt-dlp.git


# ======================================================================================================================
            *** Внедрение yt-dlp ***

from yt_dlp import YoutubeDL

URLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']
with YoutubeDL() as ydl:
    ydl.download(URLS)


# ======================================================================================================================
            *** ffmpeg ***


ffmpeg -i "%HOMEDRIVE%\%HOMEPATH%\Desktop\No Doubt - Don't Speak (Official 4K Music Video)-TR3Vdo5etCQ_313+251.webm" %HOMEDRIVE%\%HOMEPATH%\Desktop\output.mp4


-vcodec или -c:v    - указать видеокодек.
                    libx264 и установить CRF, который является уровнем качества (чем ниже, тем лучше, по умолчанию - 23,
                    а вменяемые значения - между 18 и 28).
Вам также нужно указать -strict experimental иначе вы можете получить:
« Кодировщик AAC является экспериментальным, но экспериментальные кодеки не включены, добавьте« -strict -2 »,
если хотите его использовать».


# ======================================================================================================================
'''
default_bitrate_mp3 = bitrate[3]  # default value
variable = StringVar(widget_control)
variable.set(default_bitrate_mp3)
YoutubeDlExternal().set_bitrate_mp3(default_bitrate_mp3)
bitrate_mp3 = OptionMenu(widget_control, variable, *bitrate,
                         command=YoutubeDlExternal().set_bitrate_mp3)
bitrate_mp3.grid(row=2, column=1, padx=3, sticky='WE')
'''


# ======================================================================================================================

\x1b[0;33m


YoutubeDL.py
стр. 951
allow_colors = True

или заменить функцию
    def _format_out(self, *args, **kwargs):
        return self._format_text(self._out_files.out, self._allow_colors.out, *args, **kwargs)
на
    def _format_out(self, *args, **kwargs):
        return self._format_text(self._out_files.out, True, *args, **kwargs)

print('\033[33mTest\033[0m')
print('\033[31mText\033[0m')


# ======================================================================================================================

Warning : nsig extraction failed: You may experience throttling for some formats
Install PhantomJS to workaround the issue. Please download it from
https://phantomjs.org/download.html


# ==================================================================================================

У меня вот такая шпора форматов для mp4 (порядок по убыванию удобства прокрутки больших файлов):

301 -- 1080.60 Live
312 -- 1080.60 stream
299 -- 1080.60
300 --  720.60 Live
311 --  720.60 stream
298 --  720.60
96  -- 1080.30 Live
270 -- 1080.30 stream [плохо прокручивается большой файл]
137 -- 1080.30
22  --  720.30 (with audio)
95  --  720.30 Live
232 --  720.30 stream [плохо прокручивается большой файл]
136 --  720.30
94  --  480.30 Live
231 --  480.30 stream
135 --  480.30
18  --  360.30 (with audio)
93  --  360.30 Live
230 --  360.30 stream
134 --  360.30
92  --  240.30 Live
229 --  240.30 stream
133 --  240.30
91  --  144.30 Live
269 --  144.30 stream
160 --  144.30
597 --  144.15


# ==================================================================================================
            *** Замедление скорости ***

Почитал обсуждения на разных площадках - помогает ipv6, http/3 (QUIC), и, само собой, proxy.
Так что,
    у кого есть смысл, включайте --force-ipv6.
    с QUIC х.з., если только --downloader curl --downloader-args "curl:--http3-only".
    ну и, в крайнем случае, незаменимый tor - --proxy 'socks5://localhost:9050'


Если коротко, хорошо показали себя:
    --force-ipv6
    aria2c в 10 потоков, типа такого
        --downloader aria2c --downloader-args 'aria2c:--continue --max-concurrent-downloads=30 --max-connection-per-server=16 --split=30 --min-split-size=1M'
    --extractor-args "youtube:formats=dashy" -N 4.



yt-dlp --downloader curl --downloader-args "curl:--http3-only" -f "bestvideo+bestaudio" "https://www.youtube.com/watch?v=41CKir6wRFY"

Ну и это, разве с помощью --ytdl-raw-options=downloader=curl,downloader-args=curl:--http3-only не покатит?


Попробуй вариант с aria2c для параллельной загрузки, некоторым это помогает (команда с issues/7716, что давал выше):
--downloader aria2c --downloader-args 'aria2c:--continue --max-concurrent-downloads=30 --max-connection-per-server=16 --split=30 --min-split-size=1M'


#-----------------------------------------------------------------------------------------------------------------------
Ошибка:
WARNING: [youtube] PTdUmkT-yas: Native nsig extraction failed: Trying with PhantomJS
         n = Cr1-2HkuGADChIS ; player = https://www.youtube.com/s/player/5604538d/player_ias.vflset/en_US/base.js


# ======================================================================================================================
            *** Type links ***


YouTube
https://youtu.be/b_tdqGM4_sE?t=7
https://youtu.be/ICHHPREzNs0?si=C6yU1X14VlBU7foj&t=7
https://www.youtube.com/watch?v=gc1Oqq9rBhQ&t=7
https://www.youtube.com/shorts/FpDR8Ji4c9g?t=7

list
https://www.youtube.com/watch?v=NrBFxnDsJGc&list=PLuWVb9xPcMHdyVpQDz4tPK-y40eMb1LQV
https://www.youtube.com/playlist?list=PLuWVb9xPcMHdyVpQDz4tPK-y40eMb1LQV


Rutube
https://rutube.ru/video/ed6628db75f766ff95b6683d214caed0/?r=a
https://rutube.ru/video/ed44d6b483b40317cc3603940aea2d5c/
https://rutube.ru/shorts/07067e3e9ffc258c8d544839751be1ea/
https://rutube.ru/play/embed/fcabdb49d55d23d654bd6708941cff8d
list
https://rutube.ru/plst/139621/      # ERROR: Unsupported URL


ВКонтакте
https://vk.com/video-3156562_456244281?pl_post_-215588860_2737
https://vk.com/video-215588860_456239958
https://vk.com/feed?z=video-215588860_456239958%2Fa02311fcac0970b18c%2Fpl_post_-215588860_2737
https://vk.com/video_ext.php?oid=-3156562&id=456244281&hash=4e58196736fa2b37


Kinescope
https://kinescope.io/6WQeGJAqeC8wpft9X2RGdo


# ======================================================================================================================
            *** Video Vkontakte (Вконтакте) ***


# вывести инфу о видео
yt-dlp --get-title -F https://vk.com/video-3156562_456244281

# скачать в  наилучшем качестве (по умолчанию) -f bestvideo+bestaudio/best
yt-dlp --write-thumbnail https://vk.com/video-3156562_456244281



«oid» и «id» легко получить из API, но я не могу найти способ получить значение «хеш».

Встроить ссылку:
https://vk.com/video_ext.php?oid=-31038184&id=456242753&hash=d79895b5c0835fc7

Прямая ссылка:
https://vk.com/video-31038184_456242753


Используйте метод video.get API. Хэш будет присутствовать в response.items[0].player
Пример запроса:
https://api.vk.com/method/video.get?owner_id=-31038184&videos=-31038184_456242753&v=5.131&access_token=...


Документация здесь
https://vk.com/dev/video.get



Разбор фильма "Место встречи изменить нельзя"
https://vk.com/video_ext.php?oid=-3156562&id=456244281&hash=4e58196736fa2b37
https://vk.com/video-3156562_456244281


Дмитрий Пучков разговор по душам. Алгоритм_[-219252372_456239611]_fhls-17276
https://vk.com/video-219252372_456239611?list=2d325deee6c4ff3544
yt-dlp --write-thumbnail -f hls-5652 https://vk.com/video-219252372_456239611


Про Шария
https://vk.com/video-211018905_456239133
yt-dlp --get-title -F https://vk.com/video-211018905_456239133
yt-dlp --write-thumbnail -f hls-5704 https://vk.com/video-211018905_456239133


https://vk.com/video-211351780_456247221
yt-dlp --get-title -F https://vk.com/video-211351780_456247221
yt-dlp --write-thumbnail -f hls-1271 https://vk.com/video-211351780_456247221


Магнитофон Днепр 14 [175062719_456239338]
yt-dlp --write-thumbnail -f hls-702 https://vk.com/video175062719_456239338


# Попался новый вид ссылки - на клип
https://vk.com/clip-152111071_456254458


https://vkvideo.ru/video-7902145_456244218


# prefixes=('hls-', 'url', 'dash_sep-')
dash_sep-5+dash_sep-9


# ======================================================================================================================
            *** Video Rutube (Рутуб) ***


yt-dlp --get-title -F https://rutube.ru/video/ed6628db75f766ff95b6683d214caed0/?r=a
1920x1080
yt-dlp --write-thumbnail -f default-1614-0 https://rutube.ru/video/ed6628db75f766ff95b6683d214caed0/?r=a
1280x720
yt-dlp --write-thumbnail -f default-892-0 https://rutube.ru/video/ed6628db75f766ff95b6683d214caed0/?r=a


# ==================================================================================================
            *** Video thebadcomedian.ru ***


yt-dlp --get-title -F https://node.thebadcomedian.ru/hls/chuk_review_hd/index_hd.m3u8
yt-dlp --write-thumbnail -f 0 https://node.thebadcomedian.ru/hls/chuk_review_hd/index_hd.m3u8


# ==================================================================================================
            *** Проблемные символы YouTube ***


 ｜ 
？
＂Слово＂
Эйфория


# ==================================================================================================
